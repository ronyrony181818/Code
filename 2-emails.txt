import numpy as np
import pandas as pd

data=pd.read_csv("emails.csv")

data

data.columns

data.isnull().sum()

data.info()

data.head()

data=data.drop('Email No.', axis=1)

data.shape

data.describe()

data.info()

data['Prediction'].value_counts()

x=data.drop('Prediction',axis=1)
y=data['Prediction']

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

from sklearn.neighbors import KNeighborsClassifier
neigh=KNeighborsClassifier(n_neighbors=2)
neigh.fit(x_train,y_train)

neigh.score(x_train,y_train)

neigh.score(x_test,y_test)

y_pred=neigh.predict(x_test)

import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.metrics import classification_report,confusion_matrix,ConfusionMatrixDisplay,precision_score,accuracy_score,recall_score

print("Confusion Matrix:")
cm=confusion_matrix(y_test,y_pred)
cm

mat=ConfusionMatrixDisplay(confusion_matrix=cm)
mat.plot()
plt.show()

print(classification_report(y_test,y_pred))

accuracy_score(y_test,y_pred)

precision_score(y_test,y_pred)

recall_score(y_test,y_pred)

print("Error:")
1-accuracy_score(y_test,y_pred)

from sklearn.svm import SVC
SVM=SVC(gamma='auto')
SVM.fit(x_train,y_train)

y_pred_svc=SVM.predict(x_test)

SVM.score(x_train,y_train)

SVM.score(x_test,y_test)

cm=confusion_matrix(y_test,y_pred_svc)
cm

mat=ConfusionMatrixDisplay(confusion_matrix=cm)
mat.plot()
plt.show()

print(classification_report(y_test,y_pred))